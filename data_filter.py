# -*- coding: utf-8 -*-
"""Data_filter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LY8-W3PnmOxT4DAYLGvWASqWxHtQjCZY
"""

import pandas as pd
import json
import time
df = pd.read_csv('C:\\Users\\ADMIN\\Desktop\\Movie_Search_Engine\\data\\movies_metadata.csv')
genres_list = df["genres"].tolist()
language_list = df["original_language"].tolist()
genres_tags = []
language_tags = []
for line in genres_list:
  parsed_data = json.loads(line.replace("'", "\""))
  for item in parsed_data:
    if item['name'].lower() not in genres_tags:
      genres_tags.append(item['name'].lower())
for language in language_list:
  if language not in language_tags:
    language_tags.append(language)

def extract_tags(input_string):
    tags = []

    words = input_string.split()

    for word in words:
        if word.startswith('+'):
            tags.append(word[1:])

    return tags

def extract_keyword(input):
  if "+" not in input:
    return input
  else:
    tag_start = input.find("+")
    return input[:tag_start].strip()

def title_search(dataframe,keyword):
  filtered_df = dataframe[dataframe['title'].str.contains(keyword, case=False, na=False)]
  return filtered_df

def tag_search(dataframe,tags):
  if len(tags) == 0:
    return dataframe
  for tag in tags:
    tag = tag.lower()
    if tag == "+adult":
      filtered_df = dataframe[dataframe['adult'].str.contains("FALSE", case=False, na=False)]
    elif tag in genres_tags:
      filtered_df = dataframe[dataframe['genres'].str.contains(tag, case=False, na=False)]
    elif tag in language_tags:
      filtered_df = dataframe[dataframe['original_language'].str.contains(tag, case=False, na=False)]
    else:
      return pd.DataFrame()
    return filtered_df

def main():
  User_input=input("What to search: ")
  keyword = extract_keyword(User_input)
  tags = extract_tags(User_input)
  Movie_list = title_search(df,keyword)
  Movie_list = tag_search(Movie_list,tags)
  return Movie_list
start_time = time.time()
print(main())
end_time = time.time()
execution_time = end_time - start_time
print(f"Execution time: {execution_time} seconds")