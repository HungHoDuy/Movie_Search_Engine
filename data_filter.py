# -*- coding: utf-8 -*-
"""Data_filter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LY8-W3PnmOxT4DAYLGvWASqWxHtQjCZY
"""
import pandas as pd
import json
import time
def extract_tags(input_string):
    tags = []

    words = input_string.split()

    for word in words:
        if word.startswith('+'):
            tags.append(word[1:])

    return tags

def extract_keyword(input):
  if "+" not in input:
    return input
  else:
    tag_start = input.find("+")
    return input[:tag_start].strip()

def title_search(dataframe,keyword):
  filtered_df = dataframe[dataframe['title'].str.contains(keyword, case=False, na=False)]
  return filtered_df

def tag_search(dataframe,tags,genres_tags,language_tags):
  if len(tags) == 0:
    return dataframe
  for tag in tags:
    tag = tag.lower()
    if tag == "+adult":
      dataframe = dataframe[dataframe['adult'].str.contains("FALSE", case=False, na=False)]
    elif tag in genres_tags:
      dataframe = dataframe[dataframe['genres'].str.contains(tag, case=False, na=False)]
    elif tag in language_tags:
      dataframe = dataframe[dataframe['original_language'].str.contains(tag, case=False, na=False)]
    else:
      return pd.DataFrame()
  return dataframe

def main(User_input):
  keyword = extract_keyword(User_input)
  tags = extract_tags(User_input)
  Movie_list = title_search(df,keyword)
  Movie_list = tag_search(Movie_list,tags)
  return Movie_list

start_time = time.time()
result = main("+animation +adventure")
print(result['title'])
end_time = time.time()
execution_time = end_time - start_time
print(f"Execution time: {execution_time} seconds")